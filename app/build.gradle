apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'

apply from: rootProject.file("gradle/jacoco.gradle")

def getSecretProperty(name) {
  Properties properties = new Properties()
  properties.load(project.rootProject.file('secret.properties').newDataInputStream())

  return properties.getProperty(name.toString())
}

def FABRIC_API_KEY = getSecretProperty('fabric.api.key')
def TWITTER_API_KEY = "\"${getSecretProperty('twitter.api.key')}\""
def TWITTER_API_SECRET = "\"${getSecretProperty('twitter.api.secret')}\""

android {
  compileSdkVersion 26
  buildToolsVersion "26.0.1"

  signingConfigs {
    debug {
      storeFile file("../debug.keystore")
      storePassword 'android'
      keyPassword 'android'
    }
    release {
      storeFile file("../${getSecretProperty("keystoreFile")}")
      storePassword getSecretProperty("keystorePassword")
      keyAlias getSecretProperty("keyAlias")
      keyPassword getSecretProperty("keyPassword")
    }
  }

  defaultConfig {
    applicationId "net.yslibrary.monotweety"
    minSdkVersion 19
    targetSdkVersion 26
    versionCode 38
    versionName "1.5.3-beta3"

    buildConfigField 'String', 'TWITTER_API_KEY', TWITTER_API_KEY
    buildConfigField 'String', 'TWITTER_API_SECRET', TWITTER_API_SECRET

    manifestPlaceholders = [fabricApiKey: FABRIC_API_KEY]

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      debuggable false
      minifyEnabled true
      zipAlignEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
    debug {
      debuggable true
      applicationIdSuffix '.debug'
      signingConfig signingConfigs.debug
    }
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }

  dexOptions {
    jumboMode true
  }

  lintOptions {
    lintConfig rootProject.file('gradle/lint.xml')
    abortOnError false
    textReport true
    textOutput 'stdout'
//    xmlReport true
  }

  // rename release apk
  applicationVariants.all { variant ->
    if (variant.buildType.name.equals("release")) {
      variant.outputs.each { output ->
        if (output?.outputFile?.name?.endsWith(".apk")) {
          final version = "v${defaultConfig.versionName}"
          final name = "${["monotweety", variant.baseName, version].join("-")}.apk"
          output.outputFile = new File(output.outputFile.parent, name)
        }
      }
    }
  }
}

configurations {
  all {
    resolutionStrategy {
      force "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
      force "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    }
  }
}

ext.retrofit_version = '2.3.0'
ext.support_lib_version = '26.0.2'
ext.rxbinding_version = '1.0.1'
ext.conductor_version = '2.1.4'
ext.okhttp_version = '3.9.0'
ext.dagger_version = '2.11'
ext.storio_version = '1.13.0'
dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

  compile "com.android.support:appcompat-v7:$support_lib_version"
  compile "com.android.support:recyclerview-v7:$support_lib_version"
  compile "com.android.support:design:$support_lib_version"

  compile 'com.google.firebase:firebase-core:11.2.2'

  compile "com.squareup.retrofit2:retrofit:$retrofit_version"
  compile "com.squareup.retrofit2:converter-gson:$retrofit_version"

  compile 'com.twitter:twitter-text:1.14.7'
  compile 'com.twitter.sdk.android:twitter-core:3.1.1'
  compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
    transitive = true;
  }
  compile "com.squareup.okhttp3:okhttp:$okhttp_version"

  compile "com.google.dagger:dagger:$dagger_version"
  kapt "com.google.dagger:dagger-compiler:$dagger_version"
  provided 'org.glassfish:javax.annotation:10.0-b28'

  compile "com.pushtorefresh.storio:sqlite:$storio_version"

  compile 'io.reactivex:rxjava:1.3.0'
  testCompile 'io.reactivex:rxjava:1.3.0'
  compile 'io.reactivex:rxandroid:1.2.1'
  testCompile 'io.reactivex:rxandroid:1.2.1'
  compile 'io.reactivex:rxkotlin:1.0.0'
  compile 'com.artemzin.rxjava:proguard-rules:1.3.0.0'

  compile "com.jakewharton.rxbinding:rxbinding-kotlin:$rxbinding_version"
  compile "com.jakewharton.rxbinding:rxbinding-support-v4-kotlin:$rxbinding_version"
  compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7-kotlin:$rxbinding_version"
  compile "com.jakewharton.rxbinding:rxbinding-recyclerview-v7-kotlin:$rxbinding_version"

  compile 'com.jakewharton.rxrelay:rxrelay:1.2.0'

  compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.2'

  compile "com.bluelinelabs:conductor:${conductor_version}"
  compile "com.bluelinelabs:conductor-support:${conductor_version}"
  compile "com.bluelinelabs:conductor-rxlifecycle:${conductor_version}"

  compile 'com.hannesdorfmann:adapterdelegates3:3.0.1'

  compile 'de.hdodenhof:circleimageview:2.1.0'
  compile 'com.github.bumptech.glide:glide:3.8.0'
  compile 'com.github.bumptech.glide:okhttp3-integration:1.5.0@aar'

  compile 'com.jakewharton.timber:timber:4.5.1'
  compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'

  compile 'net.yslibrary.rxeventbus:rxeventbus:1.0.1'
  compile 'net.yslibrary.licenseadapter:licenseadapter:1.4.0'

  compile 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'

  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
  testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
  })


  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:2.10.0'
  testCompile "com.nhaarman:mockito-kotlin:1.5.0"
  testCompile 'org.assertj:assertj-core:3.8.0'
  testCompile "com.squareup.okhttp3:mockwebserver:$okhttp_version"
  testCompile 'org.robolectric:robolectric:3.4.2'
}
repositories {
  mavenCentral()
//  maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
}

apply plugin: 'com.google.gms.google-services'